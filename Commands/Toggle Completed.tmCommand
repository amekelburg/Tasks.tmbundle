<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

if ENV['TM_SELECTED_TEXT']
  toggled_text = STDIN.read
  if toggled_text =~ /^\s*\*/u  # Any pendings? Then check all!
    toggled_text.gsub!(/^(\s*)(\*)/) { $1 + 'd' }
    toggled_text.gsub!(/^(\s*)(s\*)/) { $1 + 'ds' }
  else  # Uncheck all!
    toggled_text.gsub!(/^(\s*)(ds)/) { $1 + 's*' }
    toggled_text.gsub!(/^(\s*)(d)/) { $1 + '*' }
  end
  print '${0:' + toggled_text + '}'  # Wrap in selection
else
  line = ENV['TM_CURRENT_LINE'].gsub(/^(\s*)([d\*s]{1,2})/u) do
	new_sym = ''
	case $2
		when '*'
		 	new_sym = 'd'
		when 'd'
			new_sym = '*'
		when 's*'
			new_sym = 'ds'
		when 'ds'
			new_sym = 's*'
	end
	$1 + new_sym   #($2=='*' ? 'd' : '*') }
  end
  column = ENV['TM_LINE_INDEX'].to_i
  #unless column &lt;= $1.length  # If we're past the line-initial whitespace,
  #  column += ($2=='*' ? 2 : 2)  # compensate for different byte counts
  #end
  line[column,0] = '$0'  # Insert caret
  print line
end
</string>
	<key>fallbackInput</key>
	<string>line</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>~</string>
	<key>name</key>
	<string>Toggle Completed</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>text.plain.tasks</string>
	<key>uuid</key>
	<string>40140EB8-3634-465A-A656-32D6C879C85B</string>
</dict>
</plist>
